//Menu Button

.menu-btn {
  position: absolute;
  z-index: 1;
  right: 35px;
  top: 35px;
  cursor: pointer;
  @include easeOut;

  .btn-line {
    width: 28px;
    height: 4px;
    border-radius: 8px;
    margin: 0 0 5px 0;
    background: #575759;
    @include easeOut();
  }

  //Rotate Into X with Menu Lines
  &.close {
    transform: rotate(180deg);

    .btn-line {
      //line1 - Rotate
      &:nth-child(1) {
        transform: rotate(45deg) translate(6px, 4px);
      }
      //line2 - Hide
      &:nth-child(2) {
        opacity: 0;
      }
      //Line3 - Rotate
      &:nth-child(3) {
        transform: rotate(-45deg) translate(9px, -6px);
      }
    }
  }
}

// Menu Overlay

.menu {
  &.show {
    visibility: visible;
  }

  &-branding,
  &-nav {
    display: flex;
    flex-flow: column wrap;
    align-items: center;
    justify-content: center;
    float: left;
    width: 50%;
    height: 100vh;
    overflow: hidden;
  }

  &-nav {
    margin: 0;
    padding: 0;
    background: darken($primary-color, 5);
    list-style: none;
    transform: translate3d(0, -100%, 0);
    @include easeOut;

    &.show {
      // Slide in from top
      transform: translate3d(0, 0, 0);
    }
  }

  //Branding Side
  &-branding {
    background: $primary-color;
    transform: translate3d(0, 100%, 0);
    @include easeOut;

    &.show {
      // Slide in from bottom
      transform: translate3d(0, 0, 0);
    }
  }

  // animated menu branding
  $colors: (
    background: #edeee9,
    text: #252526
  );

  $font: (
    family: "Cormorant Garamond" serif,
    size: 2vw,
    letter-spacing: 0
  );

  $config: (
    animated: false,
    nb-letters: 21,
    animation-length: 4s,
    mask-letters: (
      "0",
      "1",
      "2",
      "3",
      "4",
      "5",
      "6",
      "7",
      "8",
      "9"
    )
  );

  // ----------------------------------

  @function color($value) {
    @return map-get($colors, $value);
  }

  @function font($value) {
    @return map-get($font, $value);
  }

  @function config($value) {
    @return map-get($config, $value);
  }

  @function random-string($list) {
    $result: null;
    @for $i from 1 through length($list) {
      $random: random(length($list));
      $current: nth($list, $random);
      $list: remove-nth($list, $random);
      $result: $result#{$current};
    }
    @return $result;
  }

  @function remove-nth($list, $index) {
    $result: ();
    @for $i from 1 through length($list) {
      @if $i != $index {
        $result: append($result, nth($list, $i));
      }
    }
    @return $result;
  }

  @mixin respond-to($breakpoint) {
    @if type-of($breakpoint) == list {
      @media (min-width: nth($breakpoint, 1)) and (max-width: nth($breakpoint, 2)) {
        @content;
      }
    } @else {
      @media (max-width: $breakpoint) {
        @content;
      }
    }
  }

  // ----------------------------------

  body {
    text-align: center;
  }

  .wrapper {
    position: absolute;
    top: 38%;
    left: 50%;
    bottom: 38%;
    right: 5%;
    // height: 50%;
    width: 55%;
    // overflow: auto;
    transform: translate(-50%);
  }

  .letter {
    display: inline-block;
    vertical-align: middle;
    position: relative;
    overflow: hidden;
    margin: 0vw 0.5vw 2.5vw 1vw;
    font-family: font(family);
    font-size: font(size);
    font-weight: 700;
    line-height: font(size);
    text-transform: uppercase;
    color: color(text);
    @include respond-to(625px) {
      //font-size: 16px;
      //width: 18px;
    }
    &:before {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      word-break: break-all;
      background-color: color(background);
    }
  }

  // ----------------------------------

  @for $i from 1 through config(nb-letters) {
    $length: length(config(mask-letters));
    $random: random($length);
    $steps: $random;
    $offset: font(size) * $steps * -1;
    $delay: random(100) / 100;
    $duration: $steps * (config(animation-length) / $random);
    .letter:nth-child(#{$i}):before {
      content: quote(random-string(config(mask-letters)));
      margin-top: $offset;
      animation-name: letter#{$i};
      animation-duration: $duration;
      animation-fill-mode: none;
      animation-iteration-count: infinite;
    }

    @keyframes letter#{$i} {
      from {
        margin-top: $offset;
      }
      to {
        margin-top: font(size);
      }
    }
  }

  //navigation-items
  .nav-item {
    transform: translate3d(600px, 0, 0);
    @include easeOut;

    &.show {
      // Slide in from right
      transform: translate3d(0, 0, 0);
    }

    &.current > a {
      color: #252526;
    }

    .nav-link {
      display: inline-block;
      position: relative;
      font-size: 20px;
      text-transform: uppercase;
      padding: 1rem 0;
      font-weight: 300;
      color: #969699;
      text-decoration: none;
      @include easeOut;

      &:hover {
        color: $secondary-color;
      }
    }
  }

  //Delay each nav item slide by 0.1s
  @for $x from 1 through 4 {
    .nav-item:nth-child(#{$x}) {
      transition-delay: $x * 0.1s;
    }
  }
}
